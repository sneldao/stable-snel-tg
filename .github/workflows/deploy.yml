name: Deploy to Hetzner

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USERNAME }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: |
            # Prepare directory
            mkdir -p /opt/snel-telegram
            cd /opt/snel-telegram

            # Copy new files
            rm -f bot.py docker-compose.yml Dockerfile requirements.txt

            # Create new files
            cat > bot.py << 'EOL'
            import os
            import logging
            from telegram import Update
            from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

            # Enable logging
            logging.basicConfig(
                format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
            )
            logger = logging.getLogger(__name__)

            async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
                await update.message.reply_text("Hi! I'm an echo bot. Send me a message!")

            async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
                await update.message.reply_text(update.message.text)

            def main() -> None:
                application = Application.builder().token(os.getenv("BOT_TOKEN")).build()
                application.add_handler(CommandHandler("start", start))
                application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
                application.run_polling()

            if __name__ == "__main__":
                main()
            EOL

            cat > docker-compose.yml << 'EOL'
            version: '3'
            services:
              bot:
                build: .
                environment:
                  - BOT_TOKEN=${BOT_TOKEN}
                container_name: snel-telegram-bot
                restart: always
            EOL

            cat > Dockerfile << 'EOL'
            FROM python:3.9-slim
            WORKDIR /app
            COPY requirements.txt .
            RUN pip install -r requirements.txt
            COPY bot.py .
            CMD ["python", "bot.py"]
            EOL

            cat > requirements.txt << 'EOL'
            python-telegram-bot==20.8
            EOL

            # Set up environment
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env

            # Run Docker
            docker compose down || true
            docker compose up -d --build

            # Verify
            echo "Container status:"
            docker ps | grep snel-telegram-bot || echo "Container not running!"
            echo "Container logs:"
            docker logs snel-telegram-bot
